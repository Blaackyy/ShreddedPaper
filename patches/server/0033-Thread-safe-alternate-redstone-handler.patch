From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: PureGero <puregero@gmail.com>
Date: Tue, 18 Jun 2024 08:49:24 +0900
Subject: [PATCH] Thread-safe alternate redstone handler


diff --git a/src/main/java/net/minecraft/server/level/ServerLevel.java b/src/main/java/net/minecraft/server/level/ServerLevel.java
index 13b95bebe3b805d09b7388283dfc6ad166351ac1..3d8c4bb398d404a400cdcdc3f51ea64f16856e6f 100644
--- a/src/main/java/net/minecraft/server/level/ServerLevel.java
+++ b/src/main/java/net/minecraft/server/level/ServerLevel.java
@@ -228,7 +228,7 @@ public class ServerLevel extends Level implements WorldGenLevel, ca.spottedleaf.
     public final UUID uuid;
     public boolean hasPhysicsEvent = true; // Paper - BlockPhysicsEvent
     public boolean hasEntityMoveEvent; // Paper - Add EntityMoveEvent
-    private final alternate.current.wire.WireHandler wireHandler = new alternate.current.wire.WireHandler(this); // Paper - optimize redstone (Alternate Current)
+    private final ThreadLocal<alternate.current.wire.WireHandler> wireHandler = ThreadLocal.withInitial(() -> new alternate.current.wire.WireHandler(this)); // Paper - optimize redstone (Alternate Current)
     public boolean hasRidableMoveEvent = false; // Purpur
 
     public LevelChunk getChunkIfLoaded(int x, int z) {
@@ -2588,7 +2588,7 @@ public class ServerLevel extends Level implements WorldGenLevel, ca.spottedleaf.
     // Paper start - optimize redstone (Alternate Current)
     @Override
     public alternate.current.wire.WireHandler getWireHandler() {
-        return wireHandler;
+        return wireHandler.get();
     }
     // Paper end - optimize redstone (Alternate Current)
 

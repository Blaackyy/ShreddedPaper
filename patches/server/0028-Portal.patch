From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: PureGero <puregero@gmail.com>
Date: Sat, 1 Jun 2024 10:44:19 +0900
Subject: [PATCH] Portal


diff --git a/src/main/java/net/minecraft/world/entity/Entity.java b/src/main/java/net/minecraft/world/entity/Entity.java
index 2e0967cdbc19887d89ae854261d49886fc494025..cad612dccae637690693182ed02005cc3ebc18f4 100644
--- a/src/main/java/net/minecraft/world/entity/Entity.java
+++ b/src/main/java/net/minecraft/world/entity/Entity.java
@@ -6,6 +6,8 @@ import com.google.common.collect.Lists;
 import com.google.common.collect.Sets;
 import com.google.common.collect.UnmodifiableIterator;
 import com.mojang.logging.LogUtils;
+import io.multipaper.shreddedpaper.region.RegionPos;
+import io.multipaper.shreddedpaper.threading.ShreddedPaperRegionScheduler;
 import io.papermc.paper.util.TickThread;
 import it.unimi.dsi.fastutil.objects.Object2DoubleArrayMap;
 import it.unimi.dsi.fastutil.objects.Object2DoubleMap;
@@ -468,11 +470,20 @@ public abstract class Entity implements SyncedDataHolder, Nameable, EntityAccess
         org.bukkit.event.entity.EntityPortalEnterEvent event = new org.bukkit.event.entity.EntityPortalEnterEvent(this.getBukkitEntity(), new org.bukkit.Location(world.getWorld(), pos.getX(), pos.getY(), pos.getZ()));
         event.callEvent();
 
+        // ShreddedPaper start - lock the relevant area in the other dimension
+        if (worldserver == null) return; // End is disabled
+        BlockPos destinationPos = resourcekey == Level.END ? ServerLevel.END_SPAWN_POINT : worldserver.getSharedSpawnPos();
+        ShreddedPaperRegionScheduler.scheduleAcrossLevels(
+                (ServerLevel) this.level(), RegionPos.forChunk(this.chunkPosition()),
+                worldserver, RegionPos.forBlockPos(destinationPos),
+                () -> {
+        // ShreddedPaper end - lock the relevant area in the other dimension
         if (this instanceof ServerPlayer) {
             ((ServerPlayer) this).changeDimension(worldserver, PlayerTeleportEvent.TeleportCause.END_PORTAL);
             return;
         }
         this.teleportTo(worldserver, null);
+        }); // ShreddedPaper - lock the relevant area in the other dimension
     }
     // Paper end - make end portalling safe
     // Paper start - optimise entity tracking
@@ -3289,11 +3300,24 @@ public abstract class Entity implements SyncedDataHolder, Nameable, EntityAccess
                     // Paper end - Add EntityPortalReadyEvent
                     this.setPortalCooldown();
                     // CraftBukkit start
+                    // ShreddedPaper start - lock the relevant area in the other dimension
+                    ServerLevel destinationWorld = worldserver1; // Make final
+                    if (destinationWorld != null) { // Nether is disabled
+                        WorldBorder worldborder = destinationWorld.getWorldBorder();
+                        double coordinateScale = DimensionType.getTeleportationScale(worldserver.dimensionType(), destinationWorld.dimensionType());
+                        BlockPos probablePortalPosition = worldborder.clampToBounds(this.getX() * coordinateScale, this.getY(), this.getZ() * coordinateScale);
+                        ShreddedPaperRegionScheduler.scheduleAcrossLevels(
+                                worldserver, RegionPos.forChunk(this.chunkPosition()),
+                                destinationWorld, RegionPos.forBlockPos(probablePortalPosition),
+                                () -> {
+                    // ShreddedPaper end - lock the relevant area in the other dimension
                     if (this instanceof ServerPlayer) {
-                        ((ServerPlayer) this).changeDimension(worldserver1, PlayerTeleportEvent.TeleportCause.NETHER_PORTAL);
+                        ((ServerPlayer) this).changeDimension(destinationWorld, PlayerTeleportEvent.TeleportCause.NETHER_PORTAL); // ShreddedPaper - final variable
                     } else {
-                        this.changeDimension(worldserver1);
+                        this.changeDimension(destinationWorld); // ShreddedPaper - final variable
                     }
+                        }); // ShreddedPaper - lock the relevant area in the other dimension
+                    } // ShreddedPaper
                     } // Paper - Add EntityPortalReadyEvent
                     // CraftBukkit end
                     //this.level().getProfiler().pop(); // Purpur
